/* Reset */
* { box-sizing: border-box; margin: 0; padding: 0; }

/* Theme */
:root {
  --bg: #060606;
  --muted: #9b9b9b;
  --accent-red: #ff6b6b;

  /* tweak this to nudge robot inside right half (percent of its own width) */
  --robot-shift: 36%;
}

/* Base */
html, body, #root {
  height: 100%;
  background: var(--bg);
  color: #fff;
  font-family: Inter, "Segoe UI", Roboto, system-ui, -apple-system;
  overflow-x: hidden;
}
.app-root {
  min-height: 100vh;
  position: relative;
  overflow-x: hidden;
}

/* Navigation (unchanged) */
.nav {
  position: fixed;
  top: 0; left: 0; right: 0;
  height: 72px;
  padding: 14px 48px;
  background: linear-gradient(180deg, rgba(0,0,0,0.6), rgba(0,0,0,0.15));
  backdrop-filter: blur(12px);
  border-bottom: 1px solid rgba(255,107,107,0.08);
  z-index: 60;
  display: flex;
  align-items: center;
  transition: all 0.3s ease;
}
.nav-inner { display:flex; justify-content: space-between; width:100%; align-items:center; }
.logo { font-weight:700; letter-spacing:1px; color:var(--accent-red); cursor:pointer; transition: transform .3s; position:relative; }
.logo:hover { transform: scale(1.05); }
.logo::after { content:''; position:absolute; top:50%; right:-8px; width:4px; height:4px; background:var(--accent-red); border-radius:50%; transform:translateY(-50%); animation: pulse 2s infinite; }
@keyframes pulse { 0%,100%{opacity:1} 50%{opacity:0.6} }

.nav-links { list-style:none; display:flex; gap:32px; align-items:center; }
.nav-link { color:#ffb2a6; text-decoration:none; font-size:14px; text-transform:lowercase; padding:8px 0; transition:all .25s; font-weight:500; }
.nav-link:hover { color:#fff; transform: translateY(-1px); }

/* HERO: strict two equal halves (left / right) */
.hero-container {
  display: grid;
  grid-template-columns: 1fr 1fr;  /* equal halves */
  grid-template-areas: "left right";
  gap: 60px;
  padding: calc(72px + 60px) 5% 80px;
  min-height: calc(100vh - 72px);
  max-width: 1600px;
  margin: 0 auto;
  align-items: center;
  overflow: hidden;
}

/* LEFT - content and cube (cube clipped inside left half) */
.hero-left {
  grid-area: left;
  position: relative;
  min-height: 620px;
  display: flex;
  align-items: center;
  overflow: hidden; /* CRITICAL: ensures cube doesn't escape left half */
  padding: 40px 36px;
}

/* Cube sits behind the content and intentionally bleeds right,
   but .hero-left overflow:hidden ensures it won't escape into right column */
.cube-background {
  position: absolute;
  top: 50%;
  right: -18%;            /* slight bleed toward center for visual overlap */
  width: 155%;            /* intentionally bigger so it reads as background */
  max-width: 900px;
  height: 155%;
  max-height: 900px;
  transform: translateY(-50%) scale(0.92);
  z-index: 1;
  opacity: 0.7;
  pointer-events: none;
  filter: blur(0.6px);
  border-radius: 16px;
}

/* HERO CONTENT sits above cube */
.hero-content {
  position: relative;
  z-index: 4;
  width: 100%;
  max-width: calc(100% - 40px);
  padding-right: 20px;
}

/* NAME: allow wrapping, ensure it never clips */
.hero-name {
  font-weight: 300;
  margin-bottom: 28px;
  letter-spacing: 1px;
  font-size: clamp(3rem, 8.5vw, 8rem);
  line-height: 0.92;
  display: block;
  background: linear-gradient(135deg, #ff6b6b 0%, #ff4444 25%, #ff8888 50%, #ff6b6b 100%);
  background-size: 200% 200%;
  -webkit-background-clip: text; background-clip: text; color: transparent;
  animation: gradientFlow 6s ease-in-out infinite;
  position: relative;
  text-shadow: 0 0 22px rgba(255,107,107,0.45);
  white-space: normal;    /* allow line breaks so text doesn't clip horizontally */
  overflow: visible;
}

/* small animation helpers */
.name-line { display:block; animation: slideInUp .8s ease-out forwards; opacity:0; transform:translateY(30px); color:#ff6b6b; }
.name-line:nth-child(1){ animation-delay:.18s } .name-line:nth-child(2){ animation-delay:.36s }
@keyframes slideInUp { to { opacity:1; transform:translateY(0); } }
@keyframes gradientFlow { 0%,100%{ background-position:0% 50% } 50%{ background-position:100% 50% } }

/* SUBTEXT */
.hero-sub { margin-top: 18px; margin-bottom: 36px; max-width: 620px; color:#bdbdbd; font-size:18px; line-height:1.6; position:relative; }
.typewriter-container { height:140px; width:100%; position:relative; overflow:hidden; }
.typewriter-text { position:absolute; top:0; left:0; width:100%; white-space:normal; word-wrap:break-word; hyphens:auto; }
.typewriter-caret { width:2px; height:1.2em; display:inline-block; background: linear-gradient(180deg,var(--accent-red),#ff9999); margin-left:4px; animation: caretBlink 1.2s infinite; border-radius:1px; box-shadow:0 0 8px rgba(255,107,107,0.4); }
@keyframes caretBlink { 0%,50%{opacity:1} 51%,100%{opacity:0} }

/* resume btn */
.resume-btn-wrapper { position:relative; display:inline-block; animation: slideInUp .8s ease-out .6s forwards; opacity:0; transform:translateY(20px); }
.resume-btn { display:inline-flex; align-items:center; padding:14px 32px; border-radius:25px; background:linear-gradient(135deg, rgba(255,107,97,1), rgba(255,130,130,0.95)); color:#111; text-decoration:none; font-weight:600; font-size:16px; position:relative; overflow:hidden; box-shadow: 0 8px 32px rgba(255,70,70,0.15), 0 4px 16px rgba(255,107,107,0.2); border:1px solid rgba(255,150,150,0.3); }
.resume-btn::before { content:''; position:absolute; top:0; left:-100%; width:100%; height:100%; background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent); transition:left .6s ease; }
.resume-btn:hover::before { left:100% } .resume-btn:hover { transform: translateY(-4px) scale(1.02); }
.resume-btn:active { transform: translateY(-2px) scale(.98) }

/* Spline base (used by both cube & robot) */
.spline-wrapper {
  position: absolute; top:0; left:0; width:100%; height:100%; overflow:hidden; border-radius:12px; pointer-events:none;
}
.spline-inner {
  position:absolute; top:0; left:0; width:100%; height:100%; border-radius:12px; overflow:hidden;
}
.spline-inner iframe,
.spline-inner canvas,
.spline-inner .spline-canvas,
.spline-inner object {
  width:100% !important; height:100% !important; display:block !important; background:transparent !important; border-radius:12px; transform-origin:center; border:0;
}

/* RIGHT: robot column settings */
/* The robot must take the entire right half and sit flush to the right edge.
   .hero-right clips anything outside the half. We align the spline canvas
   to the right within the wrapper so the robot visually sits at the far-right. */
.hero-right {
  grid-area: right;
  position: relative;
  width: 100%;
  height: 620px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden; /* CRITICAL: hide watermark or any out-of-bounds bits */
  padding: 20px 36px;
}

/* Make wrapper full-size of the right half, no left translation */
.hero-right .spline-wrapper {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: none;
  pointer-events: none;
  z-index: 20;
  border-radius: 12px;
}

/* Move the inner canvas slightly to the right within the wrapper and scale a bit.
   Transform origin set to right so the robot hugs the right edge while left side stays visible. */
.hero-right .spline-inner {
  position: absolute;
  top: 0;
  /* anchor to right: left:auto; right:0 ensures the inner content can be nudged rightwards */
  left: auto;
  right: 0;
  width: 120%;            /* slight overflow to let robot feel larger without scaling the whole page */
  height: 100%;
  transform-origin: right center;
  transform: translateX(var(--robot-shift)) scale(1.04); /* small right shift and scale */
  pointer-events: auto;   /* allow interactions if needed */
}

/* Hide the built-with / badge cover completely via CSS (removes watermark visible box) */
.spline-badge-cover,
.spline-inner .spline-badge,
.spline-inner .built-with-spline,
.spline-inner .badge,
.spline-inner [aria-label*="spline"],
.spline-wrapper .built-with {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Soft mask on right edge for a gentle crop (keeps crop intentional) */
.hero-right::after {
  content: '';
  position: absolute;
  top: 0; right: 0;
  width: 56px;
  height: 100%;
  pointer-events: none;
  background: linear-gradient(90deg, rgba(6,6,6,0) 0%, rgba(6,6,6,0.9) 100%);
  z-index: 50;
}

/* Subtle dimmer over robot to match style */
.hero-right .spline-dimmer {
  position: absolute;
  inset: 0;
  z-index: 30;
  pointer-events: none;
  background:
    radial-gradient(700px 700px at 50% 42%,
      rgba(6,6,6,0.05) 0%,
      rgba(0,0,0,0.07) 50%,
      rgba(6,6,6,0.14) 100%);
  mix-blend-mode: soft-light;
  border-radius: 12px;
  opacity: 0.5;
}

/* Remove any clip-path tricks so left of robot is not clipped */
.hero-right .spline-wrapper,
.hero-right .spline-inner {
  clip-path: none !important;
}

/* Cube dimmer so cube recedes behind text */
.cube-background .spline-dimmer {
  position: absolute; inset: 0; z-index: 2; pointer-events: none;
  background: radial-gradient(800px 800px at 50% 50%, rgba(6,6,6,0.22) 0%, rgba(6,6,6,0.45) 50%, rgba(6,6,6,0.8) 100%);
  mix-blend-mode: multiply; border-radius: 12px;
}

/* iframe safety: hide scrollbars if the embed wants to show them */
.spline-inner iframe { display:block; width:100% !important; height:100% !important; border:0 !important; overflow:hidden !important; scrollbar-width:none; -ms-overflow-style:none; }
.spline-inner iframe::-webkit-scrollbar { display:none; }

/* RESPONSIVE */

/* Medium screens: reduce size slightly */
@media (max-width: 1400px) {
  .hero-container { gap: 48px; padding: calc(72px + 48px) 4% 80px; max-width: 1200px; }
  .cube-background { right: -14%; width: 150%; height: 150%; transform: translateY(-50%) scale(0.88); }
  .hero-right { height: 560px; }
  .hero-right .spline-inner { width: 125%; transform: translateX(calc(var(--robot-shift) * 0.9)) scale(1.03); }
}

/* Tablet: stack, ensure cube remains visible but clipped in left column */
@media (max-width: 1100px) {
  .hero-container { grid-template-columns: 1fr; grid-template-areas: "left" "right"; gap: 64px; padding: calc(72px + 40px) 4% 60px; text-align:center; max-width:100%; }
  .hero-left { justify-content:center; overflow: visible; padding: 24px; }
  .cube-background { position:absolute; left:50%; top:55%; transform: translate(-50%,-50%) scale(0.7); width:380px; height:380px; opacity:0.35; }
  .hero-content { text-align:center; margin:0 auto; max-width:820px; }
  .hero-name { font-size: clamp(2.4rem, 10vw, 5.6rem); white-space: normal; }
  .hero-right { height:480px; justify-self:center; max-width:520px; margin:0 auto; }
  .hero-right .spline-wrapper { width:100%; }
  .hero-right .spline-inner { width:100%; left:0; right:0; transform: translateX(0) scale(1.02); transform-origin:center; }
  .hero-right::after { width:48px; }
}

/* Small screens: remove mask & badge entirely */
@media (max-width: 768px) {
  .nav { padding: 10px 18px; }
  .hero-container { padding: calc(72px + 30px) 4% 48px; gap: 44px; }
  .hero-name { font-size: clamp(2rem, 11vw, 4rem); }
  .cube-background { width:260px; height:260px; opacity:0.2; left:50%; right:auto; transform: translate(-50%,-50%) scale(0.7); }
  .hero-right { max-width:420px; height:420px; }
  .hero-right .spline-inner { width:100%; transform: translateX(0) scale(1); transform-origin:center; }
  .hero-right::after { display:none; }
  .spline-badge-cover { display:none !important; }
}

/* Tiny phones */
@media (max-width: 480px) {
  .hero-container { padding: calc(72px + 20px) 4% 36px; gap:36px; }
  .hero-right { height:360px; max-width:360px; }
  .hero-name { font-size: clamp(1.8rem, 12vw, 3.6rem); }
  .resume-btn { padding: 12px 22px; font-size:14px; }
}

/* Accessibility focus states */
.nav-link:focus-visible,
.resume-btn:focus-visible {
  outline: 2px solid var(--accent-red);
  outline-offset: 2px;
}

/* subtle background texture */
.app-root::before {
  content: '';
  position: fixed;
  inset: 0;
  background:
    radial-gradient(circle at 20% 80%, rgba(255,107,107,0.02) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255,107,107,0.02) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

/* Loading spinner for spline */
.spline-wrapper.loading::after {
  content: '';
  position: absolute;
  top: 50%; left: 50%;
  width: 40px; height: 40px;
  border: 3px solid rgba(255,107,107,0.3);
  border-top-color: var(--accent-red);
  border-radius: 50%;
  transform: translate(-50%,-50%);
  animation: spin 1s linear infinite;
  z-index: 55;
}
@keyframes spin { to { transform: translate(-50%,-50%) rotate(360deg); } }
